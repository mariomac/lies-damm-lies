version: '3.8'

services:
  pingserver:
    build:
      context: ./pingserver
      dockerfile: Dockerfile
    image: lies-pingserver
    ports:
      - "8080:8080"

  beyla:
    image: grafana/beyla:0.1.0
    privileged: true # in some environments (not GH Pull Requests) you can set it to false and then cap_add: [ SYS_ADMIN ]
    pid: "service:pingserver"
    environment:
#      PRINT_TRACES: "true"
      OPEN_PORT: 8080
      METRICS_REPORT_TARGET: true
      METRICS_INTERVAL: "1s"
      BPF_BATCH_TIMEOUT: "1s"
      BEYLA_PROMETHEUS_PORT: 8999
    ports:
      - "8999:8999"

  grafana:
    image: grafana/grafana:10.0.3
    entrypoint:
      - /usr/share/grafana/bin/grafana-server
      - --homepath=/usr/share/grafana
      - --config=/etc/grafana-config/grafana.ini
    volumes:
      - ./grafana/config:/etc/grafana-config
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"

  loki:
    image: grafana/loki:2.8.3
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"

  mimir:
    image: grafana/mimir:2.9.0
    volumes:
      - ./mimir/config:/etc/mimir-config
    entrypoint:
      - /bin/mimir
      - -config.file=/etc/mimir-config/mimir.yaml
    ports:
      - "9009:9009"

  tempo:
    image: grafana/tempo:2.1.0
    command:
      - "-storage.trace.backend=local"                  # tell tempo where to permanently put traces
      - "-storage.trace.local.path=/tmp/tempo/traces"
      - "-storage.trace.wal.path=/tmp/tempo/wal"        # tell tempo where to store the wal
      - "-auth.enabled=false"                           # disables the requirement for the X-Scope-OrgID header
      - "-server.http-listen-port=3200"
    ports:
      - "3200:3200"
      - "4317:4317"

  agent:
    image: grafana/agent:latest
    volumes:
      - ./agent/config:/etc/agent-config
    entrypoint:
      - /bin/grafana-agent
      - -server.http.address=0.0.0.0:12345
      - -config.file=/etc/agent-config/agent.yaml
      - -metrics.wal-directory=/tmp/agent/wal
      - -enable-features=integrations-next
      - -config.expand-env
      - -config.enable-read-api
    environment:
      HOSTNAME: agent
      REMOTE_WRITE_HOST: mimir:9009
      LOKI_HOST: loki:3100
      TEMPO_HOST: tempo:4317
      AVALANCHE_HOST: avalanche:9001
      MYSQL_HOST: mysql:3306
      POSTGRES_HOST: postgres:5432
      REDIS_HOST: redis:6379
      DNSMASQ_HOST: dnsmasq:53
      MEMCACHED_HOST: memcached:11211
      CONSUL_HOST: consul:8500
      ELASTICSEARCH_HOST: elasticsearch:9200
      KAFKA_HOST: kafka:9093
      MONGODB_HOST: mongodb:27017
    ports:
      - "12345:12345"
    depends_on:
      - mimir
      - loki
      - tempo

  # prewarm script, run it again from host or another container
#  k6:
#    image: grafana/k6
#    command: ["run", "/k6/k6-test.js"]
#    volumes:
#      - ./k6:/k6
